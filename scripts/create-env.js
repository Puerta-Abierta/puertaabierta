/**
 * Script to help create .env.local file for Sanity configuration
 */

const fs = require('fs')
const path = require('path')
const readline = require('readline')

// Create readline interface for user input
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
})

// Helper function to ask questions
function askQuestion(question) {
  return new Promise((resolve) => {
    rl.question(question, (answer) => {
      resolve(answer)
    })
  })
}

// Check if .env.local already exists
function checkExistingEnv() {
  const envPath = path.join(process.cwd(), '.env.local')
  return fs.existsSync(envPath)
}

// Create .env.local file
async function createEnvFile() {
  console.log('üîß Sanity Environment Setup')
  console.log('============================')
  console.log('This script will help you create a .env.local file with your Sanity configuration.\n')

  // Check if .env.local already exists
  if (checkExistingEnv()) {
    const overwrite = await askQuestion('.env.local already exists. Overwrite? (y/n): ')
    if (overwrite.toLowerCase() !== 'y') {
      console.log('‚ùå Setup cancelled')
      rl.close()
      return
    }
  }

  console.log('\nüìã Please provide the following information:')
  console.log('(You can find these in your Sanity project dashboard at https://sanity.io/manage)\n')

  // Get project ID
  const projectId = await askQuestion('Sanity Project ID: ')
  if (!projectId.trim()) {
    console.log('‚ùå Project ID is required')
    rl.close()
    return
  }

  // Get API token
  const apiToken = await askQuestion('Sanity API Token: ')
  if (!apiToken.trim()) {
    console.log('‚ùå API Token is required')
    rl.close()
    return
  }

  // Get dataset (optional)
  const dataset = await askQuestion('Dataset (press Enter for "production"): ')
  const finalDataset = dataset.trim() || 'production'

  // Create .env.local content
  const envContent = `# Sanity Configuration
# Generated by create-env.js script

# Project ID from https://sanity.io/manage
NEXT_PUBLIC_SANITY_PROJECT_ID=${projectId.trim()}

# API Token from https://sanity.io/manage -> Your Project -> API -> Tokens
# Make sure to create a token with "Editor" permissions
SANITY_API_TOKEN=${apiToken.trim()}

# Dataset name (defaults to 'production')
NEXT_PUBLIC_SANITY_DATASET=${finalDataset}

# Next.js Configuration
NEXT_PUBLIC_SANITY_API_VERSION=2023-05-03
`

  try {
    // Write .env.local file
    fs.writeFileSync('.env.local', envContent)
    console.log('\n‚úÖ .env.local file created successfully!')
    console.log('\nüìù Next steps:')
    console.log('1. Verify your .env.local file contains the correct values')
    console.log('2. Run: npm run setup-homepage')
    console.log('3. Or run: npm run import-homepage')
  } catch (error) {
    console.log('\n‚ùå Error creating .env.local file:', error.message)
  }

  rl.close()
}

// Main function
async function main() {
  try {
    await createEnvFile()
  } catch (error) {
    console.error('\n‚ùå Setup failed:', error.message)
    process.exit(1)
  }
}

// Run the script
if (require.main === module) {
  main()
}

module.exports = {
  createEnvFile,
  checkExistingEnv
}

